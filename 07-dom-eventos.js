/* Fun√ß√µes de acesso e manipula√ß√£o fo DOM

querySelector() √© uma fun√ß√£o para selecionar um √öNICO elemento na p√°gina (DOM).

querySelectorAll() √© uma fun√ß√£o para selecionar V√ÅRIOS elementos na p√°gina (DOM).

Nos dois casos, a sele√ß√£o √© feita usando seletores comuns ao que fazemos no CSS.

*/

/* Exemplos */
const titulo = document.querySelector("h1");
const textoDom = document.querySelector(".texto-dom");

const subtitulos = document.querySelectorAll("h2");
const varios = document.querySelectorAll("p, img, button");
console.log(varios);

/* Modificando elementos do DOM */
titulo.textContent = "Ol√° JavaScript!";
textoDom.innerHTML = "<i>O M√°rcio ser√° reprovado!</i>";

/* Selecionar todos os links da lista de refer√™ncias e colocar neles o atributo target valendo _blank. */
const links = document.querySelectorAll(".lista-de-referencias a");
console.log(links);

// Se fosse um por um...
// links[0].setAttribute("target", "_blank");

for( const link of links ){

    // Vers√£o 1 (moderna, vale para qualquer atributo)
    link.setAttribute("target", "_blank");

    /* Vers√£o 2 (usando atributo via propriedade)
    Mais antiga, vale para atributos nativos do HTML */
    // link.target = "_blank";
}

/* Manipulando Eventos */
const ex1 = document.querySelector("#exemplo01");

/* Poder√≠amos tamb√©m usar a fun√ß√£o getElementById em vez do querySelector. A diferen√ßa √© que ela s√≥ funciona para sele√ß√£o atrav√©s do ID. Obs: ao us√°-la N√ÉO COLOQUE #. */
//const msg = document.getElementById("mensagem");

const msg = document.querySelector("#mensagem");
const pagina = document.querySelector("body");


/* Fun√ß√£o Ouvinte de Evento (Event Listener)
aplicado ao elemento ALVO do evento desejado ("click") e uma fun√ß√£o para executar as a√ß√µes a partir do evento. Obs.: esta fun√ß√£o √© considerada do tipo "an√¥nima" e √© conhecida como "callback". */
ex1.addEventListener("click", function(){
    /* Acessamos o par√°grafo vazio e colocamos
    um conte√∫do dentro dele */
    msg.innerHTML = "Te amo Sunoo üíã!";

    /* Modificar a p√°gina alterando a fonte (CSS via JS) */
    pagina.style.fontFamily = "Verdana";
});

/* OUvinte de evento para voltar ao normal (sem texto no par√°grafo e com fonte padr√£o na p√°gina). O evento ocorrer√° ao clicar DUAS VEZES no par√°grafo da mensagem. */
msg.addEventListener("dblclick", function(){
    msg.innerHTML = ""; // removendo o conte√∫do do par√°grafo
    pagina.style.fontFamily = "initial"; // voltando pra fonte
})


/* Exemplo 02: modo noturno */
const botaoAtivar = document.querySelector("#ativar");
botaoAtivar.addEventListener("click", function(){
    /* Usamos o toggle do classList para alternar a aplica√ß√£o/remo√ß√£o da classe "noturno".
    Na pr√°tica, vira um liga/desliga. */
    pagina.classList.toggle("noturno");

    if (pagina.classList.contains("noturno")){
        botaoAtivar.textContent = "Desativar";
    }
    else {
        botaoAtivar.textContent = "Ativar";
    }
})

/* Sobre o duplo e o triplo sinal de igual */
let a = "10"; // texto
let b = 10; // n√∫mero
let resultado = a == b; // true
// let resultado = a === b; false
console.log(resultado);

// == comapara VALORES
// === compara VALORES E TIPO DE DADO










